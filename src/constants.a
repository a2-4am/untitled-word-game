;license:MIT
;(c) 2022 by 4am
;

;------------------------------------------------------------------------------
; YE OLDE GRAND UNIFIED MEMORY MAP
;
; DURING BOOT
; 0000..00EE - 0boot code
; 00ED..00FB - application code (WaitForKey)
; 00FC..00FF - application data
; 0100..010F - sector interleave array
; 0110..011B - application code (DisplayProgress)
; 011C..0171 - 0boot data (2-bit array)
; 0172..01DB - 0boot data (preshift array)
; 01DC       - unused
; 01DD..01FF - 0boot stack
; 0200..02FF - 0boot data (grouped array)
; 0800..08FF - T00S00 read from disk
; 0900..09FF - T00S0E read from disk

; DURING GAMEPLAY
; 0000..0003 - temporary pointers and counters
; 0004..001F - unused
; 0020..0039 - used by ROM for text output (could find a few unused locations if necessary)
; 003A..004D - unused
; 004E..004F - random seed (updated by WaitForKey, could be moved if necessary)
; 0050..00EE - globals (copied from page 3 during gameplay)
; 00ED..00FB - application code (WaitForKey, persists from boot phase)
; 00FC..00FF - application data
; 0100..010F - unused
; 0110..011B - application code (DisplayProgress, persists from boot phase)
; 011C..01FF - application stack (mostly unused)
; 0200..0267 - clobbered by nth() and exists()
; 0268..02FF - unused
; 0300..03FF - application code and strings
; 0400..07F7 - text page
; 07F8..0C8E - application code
; 0C8F..3FFF - application data (compressed word lists)
;------------------------------------------------------------------------------

; soft switches
KBD =          $C000      ; last key pressed (if any)
CLEARKBD =     $C010      ; clear last key pressed

; ROM routines and addresses
TEXTTOP      = $22        ; byte
TEXTBOTTOM   = $23        ; byte
HTAB         = $24        ; byte
VTAB         = $25        ; byte
RNDSEED      = $4E        ; word
ROM_TEXT =     $FB2F
ROM_TEXT_RECALC = $FC22
ROM_HOME =     $FC58
ROM_WAIT =     $FCA8
ROM_PRINT =    $FDF0
ROM_NORMAL =   $FE84      ; NORMAL text (instead of INVERSE or FLASH)
ROM_IN0 =      $FE89      ; SETKBD
ROM_PR0 =      $FE93      ; SETVID

; application-specific addresses and constants
CR =           $8D        ; carriage return
QQ =           $A2        ; quotation mark

ptr          = $00        ; word
counter      = $02        ; byte
gProgressIndicatorIndex = $03 ; byte
WaitForKey   = $00ED
kProgressIndicators = $FC
DisplayProgress = $110

tempstor=$200 ;requires 26*tblsize(4) bytes

table_size=5 ;from bin file
word_size=5 ;from bin file
num_tables=6 ;from bin file

nstore=RNDSEED ;16-bit
locstore=$ea ;16-bit
state=$e6 ;4 bytes struct
offset=$e6
left=$e8
fetched=$e9
statesize=4

value=$e4 ;16-bit
num_items=$e3
index=$e2
tblptr=$e0 ;16-bit
buf=$de ;16-bit
tbl0ptr=$dc ;16-bit
tbl5ptr=$da ;16-bit
depth=$d9
num_children=$d8
preflen=$d7
prefix=$cd ;word_size * 2 bytes
match=$cc
bits=$cb

;structure members
offset_off=0 ;16-bit
left_off=2
fetched_off=3
count_off=4 ;16-bit
locsize=6

value_off=0
bits_off=1
key_off=2 ;16-bit
tblsize=4
